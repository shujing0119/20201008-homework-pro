#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int main() {
    int aNum, bNum;
    cin >> aNum;
    cin >> bNum;

    int a[aNum], b[bNum];
    for (int i = 0; i < aNum; i++) {
        cin >> a[i];
    }
    for (int j = 0; j < bNum; j++) {
        cin >> b[j];
    }

    int place = 0;

    sort (a, a + aNum - 1);
    sort (b, b + bNum - 1);

    vector<int> result(aNum + bNum);
    vector<int>::iterator i;

    i = set_intersection(a, a+aNum, b, b+bNum,
    result.begin());
    cout << "交集:";
    for (i = result.begin(); i < result.end(); i++) {
        cout << *i << " ";

    }
    cout << "\n";

    i = set_union(a, a+aNum, b, b+bNum,result.begin());
    cout << "聯集:";
    for (i = result.begin(); i < result.end(); i++) {
        cout << *i << " ";
    }
    cout << "\n";

    i = set_difference(a, a+aNum, b, b+bNum,
    result.begin());
    
    result.resize(i-result.begin()); 

    cout << "差集:";
    for (i = result.begin(); i != result.end(); ++i) {
        cout << *i << " ";
    }
    cout << "\n";
}